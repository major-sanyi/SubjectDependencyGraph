@using SubjectDependencyGraph.Blazor.Resources
@using SubjectDependencyGraph.Shared.Models
<MudDataGrid T="Syllabus" ReadOnly="ReadOnly" Filterable=false SortMode="SortMode.None" Items="Syllabi" EditMode="DataGridEditMode.Cell">
    <Columns>
        <PropertyColumn Property="x=>x.Id" Title="@AppStrings.Syllabus_Id"></PropertyColumn>
        <PropertyColumn Property="x=>x.Name" Title="@AppStrings.Syllabus_Name"></PropertyColumn>
        <PropertyColumn Property="x=>x.Length" Title="@AppStrings.Syllabus_Length"></PropertyColumn>
        <PropertyColumn Property="x=>x.RequiredMustChoseCredit" Title="@AppStrings.Syllabus_MustChoseCredit"></PropertyColumn>
        <PropertyColumn Property="x=>x.RequiredChosableCredit" Title="@AppStrings.Syllabus_ChosableCredit"></PropertyColumn>
        <PropertyColumn Property="x=>x.StartingSpecSemester" Title="@AppStrings.Syllabus_StartingSpecSemester"></PropertyColumn>
        <TemplateColumn Sortable="false" IsEditable="false" Title="@AppStrings.Syllabus_Specialisations">
            <CellTemplate>
                <MudStack>
                    @foreach (var spec in context.Item.Specialisations)
                    {
                        <MudPaper>@spec.Name</MudPaper>
                    }
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <PagerContent>
        <MudDataGridPager />
    </PagerContent>
</MudDataGrid>

@code {
    [Parameter]
    public IEnumerable<Syllabus>? Syllabi { get; set; }

    [Parameter]
    public bool ReadOnly { get; set; } = false;
}
